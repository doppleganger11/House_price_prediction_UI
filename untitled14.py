# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DDyP1uSpoeAdVncLIAfw2RFDgoHTInna
"""

# model.py
from typing import List, Dict
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression

# Feature sets used everywhere
NUMERIC_FEATURES: List[str] = [
    "sqft",
    "num_rooms",
    "num_bathrooms",
    "age_years",
    "distance_to_city_km",
    "lot_size_sqft",
]

CATEGORICAL_FEATURES: List[str] = [
    "has_garage",
    "has_garden",
    "neighborhood",
]

# Optional: categories used to render the Streamlit controls
CATEGORICAL_OPTIONS: Dict[str, list] = {
    "has_garage": ["No", "Yes"],
    "has_garden": ["No", "Yes"],
    "neighborhood": ["A", "B", "C", "D"],
}

def build_pipeline() -> Pipeline:
    """Create a preprocessing + Linear Regression pipeline."""
    numeric = StandardScaler()
    categorical = OneHotEncoder(handle_unknown="ignore", sparse_output=False)

    pre = ColumnTransformer(
        transformers=[
            ("num", numeric, NUMERIC_FEATURES),
            ("cat", categorical, CATEGORICAL_FEATURES),
        ],
        remainder="drop",
        verbose_feature_names_out=False,
    )

    pipe = Pipeline(
        steps=[
            ("preprocess", pre),
            ("reg", LinearRegression()),
        ]
    )
    return pipe